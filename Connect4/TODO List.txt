* Generate opening moves database.
  - Verify with http://archive.ics.uci.edu/ml/datasets/Connect-4.
  - Should be one of the last steps of the project as the remaining optimisations and
    testing must be completed first.

* Optimise.
  - Improve the evaluation function.
    > Ignore 3 piece streaks which are blocked on either side. This will hurt the nodes
      per second but could be used for better move ordering and in turn reduce the number
      of nodes to search.
    > The 3 piece streak may not even be a good heuristic.
  - Parallel Minimax. Use ABDADA instead of YBWC.
  - The Move()/UndoMove() methods are the new bottlenecks.

* Testing.
  - Whole system test: create an auto player which systematically plays, at least,
    thousands of games against the AI.
  - More unit tests.
  - More assertions.
  - Print the score of each move. The iterative deepening loop will check the scores of each
    possible move to find the best move. The results on the empty board should be:
      Column 0: Heavy Loss
      Column 1: Loss
      Column 2: Draw
      Column 3: Win
      Column 4: Draw
      Column 5: Loss
      Column 6: Heavy Loss
    This will also simplify the NegaMax function by removing the last two arguments.
    > Could also run the iterative deepening loop after applying all possible moves.

* Improve the interaction between the Board class and the form.